drop table if exists notifications CASCADE ;
drop table if exists projects CASCADE ;
drop table if exists roles CASCADE ;
drop table if exists taskparticipants CASCADE ;
drop table if exists tasks CASCADE ;
drop table if exists users CASCADE ;
drop table if exists users_notifications CASCADE ;
drop table if exists users_projects CASCADE ;
drop table if exists users_roles CASCADE ;
create table notifications (id bigint generated by default as identity, created_at timestamp default current_timestamp, message varchar(1500) not null, title varchar(100) not null, updated_at timestamp default current_timestamp, task_id bigint, primary key (id));
create table projects (id bigint generated by default as identity, created_at timestamp default current_timestamp, description varchar(500), name varchar(100) not null, updated_at timestamp default current_timestamp, creator_id bigint not null, primary key (id));
create table roles (id bigint generated by default as identity, created_at timestamp default current_timestamp, name varchar(255) not null, updated_at timestamp default current_timestamp, primary key (id));
create table taskparticipants (id bigint generated by default as identity, authority varchar(255), task_id bigint, user_id bigint, primary key (id));
create table tasks (id bigint generated by default as identity, archived boolean not null, created_at timestamp default current_timestamp, deadline_time timestamp, description varchar(500) not null, name varchar(100) not null, priority varchar(255), state varchar(255), updated_at timestamp default current_timestamp, project_id bigint, primary key (id));
create table users (id bigint generated by default as identity, created_at timestamp default current_timestamp, email varchar(255), name varchar(255), password varchar(255) not null, surname varchar(255), updated_at timestamp default current_timestamp, username varchar(255) not null, primary key (id));
create table users_notifications (user_id bigint not null, notification_id bigint not null, primary key (user_id, notification_id));
create table users_projects (user_id bigint not null, project_id bigint not null, primary key (user_id, project_id));
create table users_roles (user_id bigint not null, role_id bigint not null, primary key (user_id, role_id));
alter table notifications add constraint FK2ktjq1slw0ldkuy5rx8fbte2p foreign key (task_id) references tasks;
alter table projects add constraint FK14mww7skdu5cpg6nq2kwcnx0e foreign key (creator_id) references users;
alter table taskparticipants add constraint FKc1q4q9ccgfhfy2rivep3l0g44 foreign key (task_id) references tasks;
alter table taskparticipants add constraint FK7flwhnigdf7t9yvtys88pxahr foreign key (user_id) references users;
alter table tasks add constraint FKsfhn82y57i3k9uxww1s007acc foreign key (project_id) references projects;
alter table users_notifications add constraint FKinx59ivejys2xgb2gnvre7fo2 foreign key (notification_id) references notifications;
alter table users_notifications add constraint FKil3tssmpyic5ruavb9jbbw2bb foreign key (user_id) references users;
alter table users_projects add constraint FKkoh0xgfur21fdanq862b3qx7n foreign key (project_id) references projects;
alter table users_projects add constraint FKen924y69h6d6chaojjgqfaow8 foreign key (user_id) references users;
alter table users_roles add constraint FKj6m8fwv7oqv74fcehir1a9ffy foreign key (role_id) references roles;
alter table users_roles add constraint FK2o0jvgh89lemvvo17cbqvdxaa foreign key (user_id) references users;